name: Run Ollama Phi + Open WebUI

on:
  workflow_dispatch:

jobs:
  ollama-webui:
    runs-on: ubuntu-latest
    steps:
    - name: Install Ollama
      run: |
        curl -fsSL https://ollama.ai/install.sh | sh

    - name: Pull Phi model
      run: ollama pull phi

    - name: Start Ollama
      run: ollama serve &

    - name: Install Docker (Fixed)
      run: |
        # Remove conflicting packages
        sudo apt-get remove -y docker docker-engine docker.io containerd runc
        
        # Install dependencies
        sudo apt-get update
        sudo apt-get install -y ca-certificates curl gnupg
        
        # Add Docker's official repository
        sudo install -m 0755 -d /etc/apt/keyrings
        curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu noble stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
        
        # Install Docker
        sudo apt-get update
        sudo apt-get install -y docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
        
        # Verify installation
        sudo docker --version

    - name: Run Open WebUI
      run: |
        docker run -d -p 8080:8080 --add-host=host.docker.internal:host-gateway \
          -v open-webui:/app/backend/data \
          --name open-webui \
          ghcr.io/open-webui/open-webui:main

    - name: Install ngrok
      run: |
        wget -q https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-linux-amd64.tgz
        tar -xf ngrok-v3-stable-linux-amd64.tgz
        chmod +x ngrok

    - name: Expose Open WebUI via ngrok
      env:
        NGROK_TOKEN: ${{ secrets.NGROK_TOKEN }}
      run: |
        ./ngrok config add-authtoken $NGROK_TOKEN
        ./ngrok http 8080
