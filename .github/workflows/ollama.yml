name: Run Ollama Phi + Open WebUI

on:
  workflow_dispatch:

jobs:
  ollama-webui:
    runs-on: ubuntu-latest
    steps:
    - name: Install Ollama
      run: |
        curl -fsSL https://ollama.ai/install.sh | sh

    - name: Pull Phi model (Force Refresh)
      run: |
        ollama rm phi || true
        ollama pull phi

    - name: Start Ollama (Verified Setup)
      run: |
        sudo ss -K dst localhost dport = 11434 || true
        OLLAMA_HOST=0.0.0.0 ollama serve &
        
        # Verify model availability
        timeout 60 bash -c 'until ollama list | grep -q "phi"; do sleep 2; done'
        curl -v http://localhost:11434/api/tags

    - name: Install Docker
      run: |
        sudo apt-get update
        sudo apt-get install -y docker.io

    - name: Run Open WebUI (Model-Verified)
      run: |
        docker run -d --network host \
          -e OLLAMA_BASE_URL="http://localhost:11434" \
          -e DEFAULT_USERNAME="admin" \
          -e DEFAULT_PASSWORD="your_password" \
          -v open-webui:/app/backend/data \
          --name open-webui \
          ghcr.io/open-webui/open-webui:main

    - name: Verify Container Connection
      run: |
        docker exec open-webui curl -v http://localhost:11434/api/tags

    - name: Install ngrok
      run: |
        wget -q https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-linux-amd64.tgz
        tar -xf ngrok-v3-stable-linux-amd64.tgz
        chmod +x ngrok

    - name: Expose Open WebUI via ngrok
      env:
        NGROK_TOKEN: ${{ secrets.NGROK_TOKEN }}
      run: |
        ./ngrok config add-authtoken $NGROK_TOKEN
        ./ngrok http 8080
